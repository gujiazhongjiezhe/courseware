<!DOCTYPE html><html><head><title>Untitled</title><meta charset='utf-8'><link href='https://dn-maxiang.qbox.me/res-min/themes/marxico.css' rel='stylesheet'><style>
.note-content  {font-family: 'Helvetica Neue', Arial, 'Hiragino Sans GB', STHeiti, 'Microsoft YaHei', 'WenQuanYi Micro Hei', SimSun, Song, sans-serif;}

</style></head><body><div id='preview-contents' class='note-content'>
                        
                    

<p>1、如何实现瀑布流 <br>
2、都有哪些方式可以实现两个页面间的通信。</p>

<pre class="prettyprint with-line-number hljs-light"><code class="hljs lsl"><span class="hljs-comment line-number">1.</span><span class="hljs-number">1</span>)通过url地址栏传递参数,例如：点击列表页中的每一条数据，我们跳转到同一个详细页面，但是根据点击的不一样可以看到不同的内容，这样的话我们就可以在URL中传递不同的值来区分了<br><span class="hljs-comment line-number">2.</span><span class="hljs-number">2</span>)通过本地存储 cookie、localeStorage、sessionStroage...，例如：京东的登录，我们在登录页登录完成后，把用户信息存储到本地，然后在其它页面中如果需要使用的话，我们直接从本地的存储数据中拿出来用即可<br><span class="hljs-comment line-number">3.</span><span class="hljs-number">3</span>)使用iframe在A页面中嵌入B页面,这样的话，在A中可以通过一些属性和方法实现和B页面的通信<br></code></pre>

<p>3、从一个字符串中找出重复次数最多的字符</p>

<p>4、动态向一个div中插入1000个div标签，如何实现？（考性能）</p>

<pre class="prettyprint with-line-number hljs-light"><code class="hljs lsl"><span class="hljs-comment line-number">1.</span><span class="hljs-number">1</span>)可以用JS中的createElement创建div，每当创建一个就把它添加到div中 -&gt;引发回流的次数太多  (掌握回流(重排)reflow 重绘)<br><span class="hljs-comment line-number">2.</span><span class="hljs-number">2</span>)使用字符串拼接的方式，把<span class="hljs-number">1000</span>个div都拼接完成后，统一的添加到页面中 -&gt;会对div原有的元素标签产生影响：原来标签绑定的事件都消失了<br><span class="hljs-comment line-number">3.</span><span class="hljs-number">3</span>)综合<span class="hljs-number">1</span>和<span class="hljs-number">2</span>可以使用文档碎片<br><span class="hljs-comment line-number">4.</span>如果是创建<span class="hljs-number">1000</span>万个呢? -&gt;数据分批异步加载<br><span class="hljs-comment line-number">5.</span>     <span class="hljs-number">1</span>)首先把前两屏幕的数据量(例如：<span class="hljs-number">500</span>条)先获取到，然后使用字符串拼接或者文档碎片的方式绑定到页面中<br><span class="hljs-comment line-number">6.</span>     <span class="hljs-number">2</span>)当浏览器滚动到指定的区域的时候在加载<span class="hljs-number">500</span>条...以此类推<br></code></pre>

<p>5、如何实现闭包，闭包的作用</p>

<pre class="prettyprint with-line-number hljs-light"><code class="hljs lsl"><span class="hljs-comment line-number">1.</span><span class="hljs-number">1</span>)形成一个私有的环境和别人的或者全局的隔离开<br><span class="hljs-comment line-number">2.</span><span class="hljs-number">2</span>)形成一个不销毁的私有作用域，把常用的信息保存下来，以后直接通过作用域链的机制去查找使用即可，例如：惰性思想和柯理化思想<br></code></pre>

<p>6、用过那些跨域技术</p>

<pre class="prettyprint with-line-number hljs-light"><code class="hljs elixir"><span class="hljs-comment line-number">1.</span><span class="hljs-number">1</span>)重点是jsonp,及原理<br><span class="hljs-comment line-number">2.</span><span class="hljs-number">2</span>)还有其他的一些常用的跨域方式<span class="hljs-symbol">:document</span>.domin -&gt;<span class="hljs-symbol">http:</span>/<span class="hljs-regexp">/note.youdao.com/share</span><span class="hljs-regexp">/web/file</span>.html?id=d4fd79b9bdeb3cb98133a2f443bbe081&amp;type=note<br></code></pre>

<p>7、说说你知道的兼容性问题 （面试官会根据你说出来的东西进行具体的提问）</p>

<pre class="prettyprint with-line-number hljs-light"><code class="hljs css"><span class="hljs-comment line-number">1.</span>1)从<span class="hljs-selector-tag">HTML</span>+<span class="hljs-selector-tag">CSS</span>的兼容性<br><span class="hljs-comment line-number">2.</span>2)在讲一下<span class="hljs-selector-tag">HTML5</span>+<span class="hljs-selector-tag">CSS3</span>的兼容性(包含移东端响应式布局的 <span class="hljs-selector-tag">position</span><span class="hljs-selector-pseudo">:fixed-</span>&gt;<span class="hljs-selector-tag">iscroll</span><span class="hljs-selector-class">.js</span>)<br><span class="hljs-comment line-number">3.</span>3)<span class="hljs-selector-tag">JS</span>中的兼容性<br></code></pre>

<p>8、程序出现bug了，你是如何调试的</p>

<pre class="prettyprint with-line-number hljs-light"><code class="hljs clean"><span class="hljs-comment line-number">1.</span><span class="hljs-number">1</span>)在控制台加断电，F10-&gt;逐过程  F11-&gt;逐语句<br><span class="hljs-comment line-number">2.</span><span class="hljs-number">2</span>)和人习惯在重点的位置加入console.log输出对应的值来进行调试<br></code></pre>

<p>9、平时工作中是如何进行性能优化的 <br>
         雅虎优化36条建议 <br>
         JS代码优化 <br>
        [减少资源文件的大小/减少资源请求的次数] <br>
    <a href="http://tool.css-js.com/" target="_blank">http://tool.css-js.com/</a></p>

<pre class="prettyprint with-line-number hljs-light"><code class="hljs clean"><span class="hljs-comment line-number">1.</span><span class="hljs-number">1</span>、我们的JS/CSS文件最好一个页面只用一个,需要把JS/CSS进行合并压缩,并且减少页面中的垃圾冗余代码-&gt;我们的资源文件在服务器上最好做一下GZIP压缩<br><span class="hljs-comment line-number">2.</span> [解除文件缓存-&gt;我们修改代码并上传,如果之前页面访问过该网站,很有可能不能立即见效]我们在引入CSS/JS文件的时候,在文件名的后面加上版本号(加时间戳)<br><span class="hljs-comment line-number">3.</span>&lt;script src=<span class="hljs-string">'index.js?_=201601311606'</span>&gt;&lt;/script&gt;<br><span class="hljs-comment line-number">4.</span><span class="hljs-comment">//当我们上传新的文件后把时间戳改一下就可以清除缓存了</span><br><span class="hljs-comment line-number">5.</span><br><span class="hljs-comment line-number">6.</span><span class="hljs-number">2</span>、移动端尽量少用图片(icon能用svg画的不用图片,对于一些图片尽量和设计沟通少用)<br><span class="hljs-comment line-number">7.</span>静态资源图:做布局的时候就能确定下来的图片<br><span class="hljs-comment line-number">8.</span> <span class="hljs-number">1</span>)css sprite图片合并(针对于小图片)<br><span class="hljs-comment line-number">9.</span><span class="hljs-number">2</span>)做图片延迟加载(针对于大图片 头部的长条图片、背景大图...):开始给一张默认的小的图片(最好维持在<span class="hljs-number">10</span>kb以内)<br><span class="hljs-comment line-number">10.</span><span class="hljs-number">3</span>)如果以上优化了,我们还没有解决加载慢的问题,我们在尝试最后一步操作:base64 (页面的代码太臃肿了,以后维护不好操作) -&gt;如果项目中由于图片太大我们是在解决不了,改成base64都解决了<br><span class="hljs-comment line-number">11.</span><br><span class="hljs-comment line-number">12.</span>动态数据图:通过ajax从后台读取回来的图片<br><span class="hljs-comment line-number">13.</span><span class="hljs-number">1</span>)图片延迟加载(第三周图片延迟加载实战案例)<br><span class="hljs-comment line-number">14.</span><br><span class="hljs-comment line-number">15.</span><span class="hljs-number">3</span>、音视频文件的优化：加载页面的时候,尽量不要加载音视频文件，当页面中的其他资源加载完成后在开始加载音视频文件; -&gt;目前移动端经常给音视频做的优化是：走直播流文件(音频 后缀名是m3u8格式)<br><span class="hljs-comment line-number">16.</span><br><span class="hljs-comment line-number">17.</span><span class="hljs-number">4</span>、减少页面资源请求的次数:如果当前只是一个宣传页,或者是一个简单的页面-&gt;我们的css和js采用内嵌式开发<br><span class="hljs-comment line-number">18.</span><br><span class="hljs-comment line-number">19.</span><span class="hljs-number">5</span>、我们的ajax数据请求分批请求<br><span class="hljs-comment line-number">20.</span>例如：一次要请求<span class="hljs-number">10000</span>条数据的话,我们每一次只请求<span class="hljs-number">100</span>条,第一屏幕肯定能看全了,当页面滚动到对应的其它屏幕的时候,在加载下一个<span class="hljs-number">100</span>条...(数据异步加载 微博、京东、淘宝 上拉/下拉刷新)<br><span class="hljs-comment line-number">21.</span><br><span class="hljs-comment line-number">22.</span><span class="hljs-number">6</span>、做数据的二次缓存:当我们第一次把数据请求回来,保存在本地浏览器中,第二次加载这个页面就不要在从新读取了,直接的从本地缓存中读取即可<br><span class="hljs-comment line-number">23.</span><br><span class="hljs-comment line-number">24.</span><span class="hljs-number">7</span>、代码优化：<br><span class="hljs-comment line-number">25.</span> 能用CSS3做动画的绝对不用JS,能使用transform尽量使用,能用animation的进行不用transition...<br><span class="hljs-comment line-number">26.</span>尽量减少同步操作,多用异步操作<br><span class="hljs-comment line-number">27.</span>......<br><span class="hljs-comment line-number">28.</span> 能使用原生JS自己编写的绝对不用插件或者框架<br></code></pre>

<p>去哪网 <br>
    1、如何实现事件的封装、如何实现自定义事件。 <br>
    2、简历中提到的动画库是如何实现的？需要传入哪些参数。 <br>
    3、最近实现过哪些组件，如何实现的 <br>
    4、如何实现dialog组件的 <br>
    5、看过jquery的源码吗？看到什么程度？</p></div></body></html>